{"version":3,"sources":["components/propTypes/userType.jsx","components/Todo/Todo.jsx","components/propTypes/todoType.jsx","components/TodoList/TodoList.jsx","components/Form/Form.jsx","api/users.js","App.js","api/initialTodos.js","index.js"],"names":["userType","PropTypes","shape","name","string","isRequired","Todo","id","number","title","completed","bool","user","className","type","onClick","TodoList","todos","map","todo","key","Form","state","userId","errorMessage","error","handleChange","event","target","value","setState","onSubmit","addTodo","props","preventDefault","trim","this","action","placeholder","onChange","users","React","PureComponent","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparedTodos","find","App","newTodo","Number","length","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b54ead69.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const userType = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n});\n","import React from 'react';\nimport { todoType } from '../propTypes/todoType';\n\nexport const Todo = ({ title, user, completed }) => (\n  <>\n    <span>{user.name}</span>\n    <p className=\"m-0\">\n      {`Todo: ${title}`}\n    </p>\n\n    <label className=\"form-check-label mt-3\">\n      <input\n        type=\"checkbox\"\n        className=\"form-check-input m-0 mx-5\"\n        onClick={() => !completed}\n      />\n      {completed ? 'done' : 'Need more time'}\n    </label>\n  </>\n);\n\nTodo.propTypes = todoType.isRequired;\n","import PropTypes from 'prop-types';\nimport { userType } from './userType';\n\nexport const todoType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: userType.isRequired,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo/Todo';\nimport { todoType } from '../propTypes/todoType';\n\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos }) => (\n  <div className=\"container\">\n\n    <ul className=\"list-group todos mx-auto text-light\">\n      {todos.map(todo => (\n        /* eslint-disable-next-line */\n        <li key={todo.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n          <Todo\n            title={todo.title}\n            user={todo.user}\n            completed={todo.completed}\n          />\n        </li>\n      ))}\n    </ul>\n\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(todoType).isRequired,\n};\n","import React from 'react';\nimport PropType from 'prop-types';\nimport { userType } from '../propTypes/userType';\n\nexport class Form extends React.PureComponent {\n  state = {\n    title: '',\n    userId: 0,\n    errorMessage: '',\n    error: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      error: false,\n      errorMessage: '',\n    });\n  }\n\n  onSubmit = (event) => {\n    const { title, userId } = this.state;\n    const { addTodo } = this.props;\n\n    event.preventDefault();\n\n    if (!title.trim()) {\n      this.setState({\n        errorMessage: 'Enter the title',\n        error: true,\n      });\n    }\n\n    if (!userId) {\n      this.setState({\n        errorMessage: 'Chose somebody',\n        error: true,\n      });\n    }\n\n    addTodo(title, userId);\n\n    if (userId && title) {\n      this.setState({\n        title: '',\n        userId: 0,\n        error: false,\n        errorMessage: '',\n      });\n    }\n  }\n\n  render() {\n    const {\n      title,\n      userId,\n      errorMessage,\n      error,\n    } = this.state;\n\n    return (\n      <>\n        <form\n          action=\"\"\n          className=\"my-4 \"\n          onSubmit={this.onSubmit}\n        >\n          {/* eslint-disable-next-line */}\n          <div className=\"d-flex justify-content-center flex-column w-50 mx-auto my-2\">\n            <label className=\"text-light\">\n              <input\n                className=\"form-control m-auto\"\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Add a new todo...\"\n                value={title}\n                onChange={this.handleChange}\n              />\n            </label>\n\n            <select\n              name=\"userId\"\n              className=\"form-control w-50 mx-auto\"\n              value={userId}\n              onChange={this.handleChange}\n            >\n              <option>Choose your hero</option>\n              {this.props.users.map(user => (\n                <option key={user.id} value={+user.id}>{user.name}</option>\n              ))}\n            </select>\n          </div>\n\n          {/* eslint-disable-next-line */}\n          {error && <p className=\"text-danger\">{errorMessage}</p>}\n\n          <div>\n            <button type=\"submit\" className=\"btn btn-light\">\n              Add\n            </button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nForm.propTypes = {\n  users: PropType.arrayOf(PropType.shape(userType)).isRequired,\n  addTodo: PropType.func.isRequired,\n};\n","const users = [\r\n  {\r\n    id: 1,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz',\r\n    address: {\r\n      street: 'Kulas Light',\r\n      suite: 'Apt. 556',\r\n      city: 'Gwenborough',\r\n      zipcode: '92998-3874',\r\n      geo: {\r\n        lat: '-37.3159',\r\n        lng: '81.1496',\r\n      },\r\n    },\r\n    phone: '1-770-736-8031 x56442',\r\n    website: 'hildegard.org',\r\n    company: {\r\n      name: 'Romaguera-Crona',\r\n      catchPhrase: 'Multi-layered client-server neural-net',\r\n      bs: 'harness real-time e-markets',\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv',\r\n    address: {\r\n      street: 'Victor Plains',\r\n      suite: 'Suite 879',\r\n      city: 'Wisokyburgh',\r\n      zipcode: '90566-7771',\r\n      geo: {\r\n        lat: '-43.9509',\r\n        lng: '-34.4618',\r\n      },\r\n    },\r\n    phone: '010-692-6593 x09125',\r\n    website: 'anastasia.net',\r\n    company: {\r\n      name: 'Deckow-Crist',\r\n      catchPhrase: 'Proactive didactic contingency',\r\n      bs: 'synergize scalable supply-chains',\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net',\r\n    address: {\r\n      street: 'Douglas Extension',\r\n      suite: 'Suite 847',\r\n      city: 'McKenziehaven',\r\n      zipcode: '59590-4157',\r\n      geo: {\r\n        lat: '-68.6102',\r\n        lng: '-47.0653',\r\n      },\r\n    },\r\n    phone: '1-463-123-4447',\r\n    website: 'ramiro.info',\r\n    company: {\r\n      name: 'Romaguera-Jacobson',\r\n      catchPhrase: 'Face to face bifurcated interface',\r\n      bs: 'e-enable strategic applications',\r\n    },\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org',\r\n    address: {\r\n      street: 'Hoeger Mall',\r\n      suite: 'Apt. 692',\r\n      city: 'South Elvis',\r\n      zipcode: '53919-4257',\r\n      geo: {\r\n        lat: '29.4572',\r\n        lng: '-164.2990',\r\n      },\r\n    },\r\n    phone: '493-170-9623 x156',\r\n    website: 'kale.biz',\r\n    company: {\r\n      name: 'Robel-Corkery',\r\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\r\n      bs: 'transition cutting-edge web services',\r\n    },\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca',\r\n    address: {\r\n      street: 'Skiles Walks',\r\n      suite: 'Suite 351',\r\n      city: 'Roscoeview',\r\n      zipcode: '33263',\r\n      geo: {\r\n        lat: '-31.8129',\r\n        lng: '62.5342',\r\n      },\r\n    },\r\n    phone: '(254)954-1289',\r\n    website: 'demarco.info',\r\n    company: {\r\n      name: 'Keebler LLC',\r\n      catchPhrase: 'User-centric fault-tolerant solution',\r\n      bs: 'revolutionize end-to-end systems',\r\n    },\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info',\r\n    address: {\r\n      street: 'Norberto Crossing',\r\n      suite: 'Apt. 950',\r\n      city: 'South Christy',\r\n      zipcode: '23505-1337',\r\n      geo: {\r\n        lat: '-71.4197',\r\n        lng: '71.7478',\r\n      },\r\n    },\r\n    phone: '1-477-935-8478 x6430',\r\n    website: 'ola.org',\r\n    company: {\r\n      name: 'Considine-Lockman',\r\n      catchPhrase: 'Synchronised bottom-line interface',\r\n      bs: 'e-enable innovative applications',\r\n    },\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz',\r\n    address: {\r\n      street: 'Rex Trail',\r\n      suite: 'Suite 280',\r\n      city: 'Howemouth',\r\n      zipcode: '58804-1099',\r\n      geo: {\r\n        lat: '24.8918',\r\n        lng: '21.8984',\r\n      },\r\n    },\r\n    phone: '210.067.6132',\r\n    website: 'elvis.io',\r\n    company: {\r\n      name: 'Johns Group',\r\n      catchPhrase: 'Configurable multimedia task-force',\r\n      bs: 'generate enterprise e-tailers',\r\n    },\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me',\r\n    address: {\r\n      street: 'Ellsworth Summit',\r\n      suite: 'Suite 729',\r\n      city: 'Aliyaview',\r\n      zipcode: '45169',\r\n      geo: {\r\n        lat: '-14.3990',\r\n        lng: '-120.7677',\r\n      },\r\n    },\r\n    phone: '586.493.6943 x140',\r\n    website: 'jacynthe.com',\r\n    company: {\r\n      name: 'Abernathy Group',\r\n      catchPhrase: 'Implemented secondary concept',\r\n      bs: 'e-enable extensible e-tailers',\r\n    },\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io',\r\n    address: {\r\n      street: 'Dayna Park',\r\n      suite: 'Suite 449',\r\n      city: 'Bartholomebury',\r\n      zipcode: '76495-3109',\r\n      geo: {\r\n        lat: '24.6463',\r\n        lng: '-168.8889',\r\n      },\r\n    },\r\n    phone: '(775)976-6794 x41206',\r\n    website: 'conrad.com',\r\n    company: {\r\n      name: 'Yost and Sons',\r\n      catchPhrase: 'Switchable contextually-based project',\r\n      bs: 'aggregate real-time technologies',\r\n    },\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz',\r\n    address: {\r\n      street: 'Kattie Turnpike',\r\n      suite: 'Suite 198',\r\n      city: 'Lebsackbury',\r\n      zipcode: '31428-2261',\r\n      geo: {\r\n        lat: '-38.2386',\r\n        lng: '57.2232',\r\n      },\r\n    },\r\n    phone: '024-648-3804',\r\n    website: 'ambrose.net',\r\n    company: {\r\n      name: 'Hoeger LLC',\r\n      catchPhrase: 'Centralized empowering task-force',\r\n      bs: 'target end-to-end models',\r\n    },\r\n  },\r\n];\r\n\r\nexport default users;\r\n","import React from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Form } from './components/Form/Form';\nimport './App.css';\n\nimport initialTodos from './api/initialTodos';\nimport users from './api/users';\n\nconst preparedTodos = initialTodos.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId),\n}));\n\nclass App extends React.PureComponent {\n  state = {\n    todos: preparedTodos,\n  }\n\n  addTodo = (title, userId) => {\n    const newTodo = {\n      title,\n      userId: Number(userId),\n      id: this.state.todos.length + 1,\n      completed: false,\n      user: users.find(user => user.id === +userId),\n    };\n\n    this.setState(prevState => ({\n      todos: [...prevState.todos, newTodo],\n    }));\n  };\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Form users={users} addTodo={this.addTodo} />\n        <TodoList todos={todos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}